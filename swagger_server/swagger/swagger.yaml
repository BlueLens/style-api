---
swagger: "2.0"
info:
  description: "This is a API document for Stylens Service"
  version: "0.0.1"
  title: "style-api"
  contact:
    email: "master@bluehack.net"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "api.stylelens.io"
basePath: "/"
tags:
- name: "feed"
  description: "feed"
- name: "product"
  description: "product"
schemes:
- "http"
paths:
  /feeds:
    get:
      tags:
      - "feed"
      summary: ""
      description: "Returns Main Feeds"
      operationId: "get_feeds"
      produces:
      - "application/json"
      parameters:
      - name: "offset"
        in: "query"
        description: ""
        required: false
        type: "integer"
        format: "int32"
      - name: "limit"
        in: "query"
        description: ""
        required: false
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GetFeedResponse"
        400:
          description: "Invalid input"
        404:
          description: "Feeds not found"
      x-swagger-router-controller: "swagger_server.controllers.feed_controller"
  /products:
    get:
      tags:
      - "product"
      summary: "Get Products by productId"
      description: "Returns similar Products with productId"
      operationId: "get_products"
      produces:
      - "application/json"
      parameters:
      - name: "productId"
        in: "query"
        description: ""
        required: true
        type: "string"
      - name: "offset"
        in: "query"
        description: ""
        required: false
        type: "integer"
        format: "int32"
      - name: "limit"
        in: "query"
        description: ""
        required: false
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GetProductsResponse"
        400:
          description: "Invalid input supplied"
        404:
          description: "imageId or objectId not found"
      x-swagger-router-controller: "swagger_server.controllers.product_controller"
  /products/{productId}:
    get:
      tags:
      - "product"
      summary: "Find Product by ID"
      description: "Returns a single Product"
      operationId: "get_product_by_id"
      produces:
      - "application/json"
      parameters:
      - name: "productId"
        in: "path"
        description: "ID of Product to return"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GetProductResponse"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Product not found"
      x-swagger-router-controller: "swagger_server.controllers.product_controller"
  /products/images:
    post:
      tags:
      - "product"
      summary: "Query to search products"
      description: ""
      operationId: "get_products_by_image_file"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "file"
        in: "formData"
        description: "Image file to upload (only support jpg format yet)"
        required: false
        type: "file"
      - name: "offset"
        in: "query"
        description: ""
        required: false
        type: "integer"
        format: "int32"
      - name: "limit"
        in: "query"
        description: ""
        required: false
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GetProductsResponse"
        400:
          description: "Invalid input"
      x-swagger-router-controller: "swagger_server.controllers.product_controller"
  /products/images/{imageId}/objects/{objectId}:
    get:
      tags:
      - "product"
      summary: "Get Products by imageId and objectId"
      description: "Returns Products belongs to a imageId and objectId"
      operationId: "get_products_by_image_id_and_object_id"
      produces:
      - "application/json"
      parameters:
      - name: "imageId"
        in: "path"
        description: ""
        required: true
        type: "string"
      - name: "objectId"
        in: "path"
        description: ""
        required: true
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GetProductsResponse"
        400:
          description: "Invalid input supplied"
        404:
          description: "imageId or objectId not found"
      x-swagger-router-controller: "swagger_server.controllers.product_controller"
  /products/hosts/{hostCode}/products/{productNo}:
    get:
      tags:
      - "product"
      summary: "Get Product by hostCode and productNo"
      description: "Returns Product belongs to a Host and productNo"
      operationId: "get_product_by_hostcode_and_product_no"
      produces:
      - "application/json"
      parameters:
      - name: "hostCode"
        in: "path"
        description: ""
        required: true
        type: "string"
      - name: "productNo"
        in: "path"
        description: ""
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GetProductResponse"
        400:
          description: "Invalid input supplied"
        404:
          description: "Host or productNo not found"
      x-swagger-router-controller: "swagger_server.controllers.product_controller"
  /objects:
    post:
      tags:
      - "object"
      summary: "Query to search objects and products"
      description: ""
      operationId: "get_objects_by_image_file"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "file"
        in: "formData"
        description: "Image file to upload (only support jpg format yet)"
        required: true
        type: "file"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GetObjectsResponse"
        400:
          description: "Invalid input"
      x-swagger-router-controller: "swagger_server.controllers.object_controller"
  /objects/products/{productId}:
    get:
      tags:
      - "object"
      summary: "Query to search multiple objects"
      description: ""
      operationId: "get_objects_by_product_id"
      produces:
      - "application/json"
      parameters:
      - name: "productId"
        in: "path"
        description: ""
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GetObjectsByProductIdResponse"
        400:
          description: "Invalid input"
      x-swagger-router-controller: "swagger_server.controllers.object_controller"
securityDefinitions:
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Product:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      host_code:
        type: "string"
      host_url:
        type: "string"
      host_name:
        type: "string"
      tags:
        type: "array"
        items:
          type: "string"
      class_code:
        type: "string"
        example: "n0100001"
      price:
        type: "integer"
        format: "int32"
      currency_unit:
        type: "string"
      product_url:
        type: "string"
      product_no:
        type: "string"
      nation:
        type: "string"
      main_image:
        type: "string"
        description: "image url"
      main_image_mobile_full:
        type: "string"
        description: "Mobile full size of image url"
      main_image_mobile_thumb:
        type: "string"
        description: "Mobile thumbnail size of image url"
      sizes:
        type: "array"
        items:
          type: "string"
      discount_rate:
        type: "integer"
        format: "int32"
      version:
        type: "string"
  ProductsArray:
    type: "array"
    items:
      $ref: "#/definitions/Product"
  BoxArray:
    type: "array"
    items:
      type: "number"
      format: "float"
      description: ""
    maxItems: 4
  BoxesArray:
    type: "array"
    items:
      $ref: "#/definitions/BoxObject"
  BoxObject:
    type: "object"
    properties:
      box:
        $ref: "#/definitions/BoxArray"
      class_code:
        type: "string"
      class_name:
        type: "string"
      score:
        type: "number"
        format: "float"
      products:
        type: "array"
        items:
          $ref: "#/definitions/Product"
  GetProductResponse:
    type: "object"
    properties:
      message:
        type: "string"
      data:
        $ref: "#/definitions/Product"
  GetFeedResponse:
    type: "object"
    properties:
      message:
        type: "string"
      data:
        type: "array"
        items:
          $ref: "#/definitions/Product"
  GetObjectsResponse:
    type: "object"
    properties:
      message:
        type: "string"
      data:
        $ref: "#/definitions/GetObjectsResponse_data"
  GetObjectsByProductIdResponse:
    type: "object"
    properties:
      message:
        type: "string"
      data:
        $ref: "#/definitions/GetObjectsByProductIdResponse_data"
  SearchImageResponse:
    type: "object"
    properties:
      message:
        type: "string"
      data:
        type: "array"
        items:
          $ref: "#/definitions/Product"
  GetProductsResponse:
    type: "object"
    properties:
      message:
        type: "string"
      data:
        type: "array"
        items:
          $ref: "#/definitions/Product"
  GetObjectsResponse_data:
    properties:
      boxes:
        $ref: "#/definitions/BoxesArray"
      image_id:
        type: "string"
  GetObjectsByProductIdResponse_data:
    properties:
      boxes:
        $ref: "#/definitions/BoxesArray"
      product_id:
        type: "string"
externalDocs:
  description: "Find out more about BlueLens"
  url: "http://bluelens.io"
