---
swagger: "2.0"
info:
  description: "This is a API document for Stylens Service"
  version: "0.0.2"
  title: "style-api"
  contact:
    email: "master@bluehack.net"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "api.stylelens.io"
basePath: "/"
tags:
- name: "feed"
  description: "feed"
- name: "image"
  description: "image"
- name: "playground"
  description: "playground"
schemes:
- "http"
paths:
  /feeds:
    get:
      tags:
      - "feed"
      summary: ""
      description: "Returns Main Feeds"
      operationId: "get_feeds"
      produces:
      - "application/json"
      parameters:
      - name: "offset"
        in: "query"
        description: ""
        required: false
        type: "integer"
        format: "int32"
      - name: "limit"
        in: "query"
        description: ""
        required: false
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GetFeedResponse"
        400:
          description: "Invalid input"
        404:
          description: "Feeds not found"
      x-swagger-router-controller: "swagger_server.controllers.feed_controller"
  /images:
    get:
      tags:
      - "image"
      summary: "Get Images by imageId"
      description: "Returns similar Images with imageId"
      operationId: "get_images"
      produces:
      - "application/json"
      parameters:
      - name: "imageId"
        in: "query"
        description: ""
        required: true
        type: "string"
      - name: "offset"
        in: "query"
        description: ""
        required: false
        type: "integer"
        format: "int32"
      - name: "limit"
        in: "query"
        description: ""
        required: false
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GetImagesResponse"
        400:
          description: "Invalid input supplied"
        404:
          description: "imageId or objectId not found"
      x-swagger-router-controller: "swagger_server.controllers.image_controller"
  /images/{imageId}:
    get:
      tags:
      - "image"
      summary: "Find Images by ID"
      description: "Returns a single Image"
      operationId: "get_image_by_id"
      produces:
      - "application/json"
      parameters:
      - name: "imageId"
        in: "path"
        description: "ID of Image to return"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GetImageResponse"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Image not found"
      x-swagger-router-controller: "swagger_server.controllers.image_controller"
  /images/objects/{objectId}:
    get:
      tags:
      - "image"
      summary: "Query to search images by object id"
      description: ""
      operationId: "get_images_by_object_id"
      produces:
      - "application/json"
      parameters:
      - name: "objectId"
        in: "path"
        description: ""
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GetImagesResponse"
        400:
          description: "Invalid input"
      x-swagger-router-controller: "swagger_server.controllers.image_controller"
  /images/userImages:
    post:
      tags:
      - "image"
      summary: "Query to search images"
      description: ""
      operationId: "get_images_by_user_image_file"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "file"
        in: "formData"
        description: "User's Image file to upload (only support jpg format yet)"
        required: false
        type: "file"
      - name: "offset"
        in: "query"
        description: ""
        required: false
        type: "integer"
        format: "int32"
      - name: "limit"
        in: "query"
        description: ""
        required: false
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GetImagesResponse"
        400:
          description: "Invalid input"
      x-swagger-router-controller: "swagger_server.controllers.image_controller"
  /images/userImages/{userImageId}/objects/{objectIndex}:
    get:
      tags:
      - "image"
      summary: "Get Images by userImageId and objectIndex"
      description: "Returns Images belongs to a userImageId and objectIndex"
      operationId: "get_images_by_user_image_id_and_object_index"
      produces:
      - "application/json"
      parameters:
      - name: "userImageId"
        in: "path"
        description: ""
        required: true
        type: "string"
      - name: "objectIndex"
        in: "path"
        description: ""
        required: true
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GetImagesResponse"
        400:
          description: "Invalid input supplied"
        404:
          description: "userImageId or objectIndex not found"
      x-swagger-router-controller: "swagger_server.controllers.image_controller"
  /images/hosts/{hostCode}/images/{productNo}:
    get:
      tags:
      - "image"
      summary: "Get Image by hostCode and productNo"
      description: "Returns Image belongs to a Host and productNo"
      operationId: "get_image_by_hostcode_and_product_no"
      produces:
      - "application/json"
      parameters:
      - name: "hostCode"
        in: "path"
        description: ""
        required: true
        type: "string"
      - name: "productNo"
        in: "path"
        description: ""
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GetImageResponse"
        400:
          description: "Invalid input supplied"
        404:
          description: "Host or productNo not found"
      x-swagger-router-controller: "swagger_server.controllers.image_controller"
  /objects:
    post:
      tags:
      - "object"
      summary: "Query to search objects and images"
      description: ""
      operationId: "get_objects_by_user_image_file"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "file"
        in: "formData"
        description: "User's Image file to upload (only support jpg format yet)"
        required: true
        type: "file"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GetObjectsResponse"
        400:
          description: "Invalid input"
      x-swagger-router-controller: "swagger_server.controllers.object_controller"
  /objects/images/{imageId}:
    get:
      tags:
      - "object"
      summary: "Query to search multiple objects"
      description: ""
      operationId: "get_objects_by_image_id"
      produces:
      - "application/json"
      parameters:
      - name: "imageId"
        in: "path"
        description: ""
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GetObjectsByImageIdResponse"
        400:
          description: "Invalid input"
      x-swagger-router-controller: "swagger_server.controllers.object_controller"
  /playgrounds/objects:
    post:
      tags:
      - "playground"
      summary: ""
      description: ""
      operationId: "get_playground_objects_by_user_image_file"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "file"
        in: "formData"
        description: "User's Image file to upload (only support jpg format yet)"
        required: true
        type: "file"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GetObjectsResponse"
        400:
          description: "Invalid input"
      x-swagger-router-controller: "swagger_server.controllers.playground_controller"
securityDefinitions:
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Image:
    type: "object"
    properties:
      id:
        type: "string"
      product_name:
        type: "string"
      product_id:
        type: "string"
      host_code:
        type: "string"
      host_url:
        type: "string"
      host_name:
        type: "string"
      class_code:
        type: "string"
        example: ""
      price:
        type: "integer"
        format: "int32"
      currency_unit:
        type: "string"
      product_url:
        type: "string"
      product_no:
        type: "string"
      nation:
        type: "string"
      main_image_mobile_full:
        type: "string"
        description: "Mobile full size of image url"
      main_image_mobile_thumb:
        type: "string"
        description: "Mobile thumbnail size of image url"
      version:
        type: "string"
      images:
        type: "array"
        items:
          $ref: "#/definitions/SimImage"
  SimImage:
    type: "object"
    properties:
      id:
        type: "string"
      product_name:
        type: "string"
      product_id:
        type: "string"
      host_code:
        type: "string"
      host_url:
        type: "string"
      host_name:
        type: "string"
      class_code:
        type: "string"
        example: ""
      price:
        type: "integer"
        format: "int32"
      currency_unit:
        type: "string"
      product_url:
        type: "string"
      product_no:
        type: "string"
      nation:
        type: "string"
      main_image_mobile_full:
        type: "string"
        description: "Mobile full size of image url"
      main_image_mobile_thumb:
        type: "string"
        description: "Mobile thumbnail size of image url"
      version:
        type: "string"
  ImagesArray:
    type: "array"
    items:
      $ref: "#/definitions/Image"
  Box:
    type: "object"
    properties:
      left:
        type: "number"
        format: "float"
      right:
        type: "number"
        format: "float"
      top:
        type: "number"
        format: "float"
      bottom:
        type: "number"
        format: "float"
  BoxesArray:
    type: "array"
    items:
      $ref: "#/definitions/BoxObject"
  BoxObject:
    type: "object"
    properties:
      id:
        type: "string"
      box:
        $ref: "#/definitions/Box"
      image_id:
        type: "string"
      version_id:
        type: "string"
      class_code:
        type: "string"
      score:
        type: "number"
        format: "float"
  GetImageResponse:
    type: "object"
    properties:
      message:
        type: "string"
      data:
        $ref: "#/definitions/Image"
  GetFeedResponse:
    type: "object"
    properties:
      message:
        type: "string"
      data:
        type: "array"
        items:
          $ref: "#/definitions/Image"
  GetObjectsResponse:
    type: "object"
    properties:
      message:
        type: "string"
      data:
        $ref: "#/definitions/GetObjectsResponse_data"
  GetObjectsByImageIdResponse:
    type: "object"
    properties:
      message:
        type: "string"
      data:
        $ref: "#/definitions/GetObjectsByImageIdResponse_data"
  SearchImageResponse:
    type: "object"
    properties:
      message:
        type: "string"
      data:
        type: "array"
        items:
          $ref: "#/definitions/Image"
  GetImagesResponse:
    type: "object"
    properties:
      message:
        type: "string"
      data:
        type: "array"
        items:
          $ref: "#/definitions/Image"
  GetObjectsResponse_data:
    properties:
      boxes:
        type: "array"
        items:
          $ref: "#/definitions/BoxObject"
      image_id:
        type: "string"
      images:
        type: "array"
        items:
          $ref: "#/definitions/SimImage"
  GetObjectsByImageIdResponse_data:
    properties:
      boxes:
        type: "array"
        items:
          $ref: "#/definitions/BoxObject"
      image_id:
        type: "string"
externalDocs:
  description: "Find out more about BlueLens"
  url: "http://bluelens.io"
