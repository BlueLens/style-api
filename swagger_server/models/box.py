# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class Box(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, left: float=None, right: float=None, top: float=None, bottom: float=None):
        """
        Box - a model defined in Swagger

        :param left: The left of this Box.
        :type left: float
        :param right: The right of this Box.
        :type right: float
        :param top: The top of this Box.
        :type top: float
        :param bottom: The bottom of this Box.
        :type bottom: float
        """
        self.swagger_types = {
            'left': float,
            'right': float,
            'top': float,
            'bottom': float
        }

        self.attribute_map = {
            'left': 'left',
            'right': 'right',
            'top': 'top',
            'bottom': 'bottom'
        }

        self._left = left
        self._right = right
        self._top = top
        self._bottom = bottom

    @classmethod
    def from_dict(cls, dikt) -> 'Box':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Box of this Box.
        :rtype: Box
        """
        return deserialize_model(dikt, cls)

    @property
    def left(self) -> float:
        """
        Gets the left of this Box.

        :return: The left of this Box.
        :rtype: float
        """
        return self._left

    @left.setter
    def left(self, left: float):
        """
        Sets the left of this Box.

        :param left: The left of this Box.
        :type left: float
        """

        self._left = left

    @property
    def right(self) -> float:
        """
        Gets the right of this Box.

        :return: The right of this Box.
        :rtype: float
        """
        return self._right

    @right.setter
    def right(self, right: float):
        """
        Sets the right of this Box.

        :param right: The right of this Box.
        :type right: float
        """

        self._right = right

    @property
    def top(self) -> float:
        """
        Gets the top of this Box.

        :return: The top of this Box.
        :rtype: float
        """
        return self._top

    @top.setter
    def top(self, top: float):
        """
        Sets the top of this Box.

        :param top: The top of this Box.
        :type top: float
        """

        self._top = top

    @property
    def bottom(self) -> float:
        """
        Gets the bottom of this Box.

        :return: The bottom of this Box.
        :rtype: float
        """
        return self._bottom

    @bottom.setter
    def bottom(self, bottom: float):
        """
        Sets the bottom of this Box.

        :param bottom: The bottom of this Box.
        :type bottom: float
        """

        self._bottom = bottom

