# coding: utf-8

from __future__ import absolute_import
from swagger_server.models.box_array import BoxArray
from swagger_server.models.products_array import ProductsArray
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class BoxObject(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, box: BoxArray=None, class_code: str=None, class_name: str=None, images: ProductsArray=None):
        """
        BoxObject - a model defined in Swagger

        :param box: The box of this BoxObject.
        :type box: BoxArray
        :param class_code: The class_code of this BoxObject.
        :type class_code: str
        :param class_name: The class_name of this BoxObject.
        :type class_name: str
        :param images: The images of this BoxObject.
        :type images: ProductsArray
        """
        self.swagger_types = {
            'box': BoxArray,
            'class_code': str,
            'class_name': str,
            'images': ProductsArray
        }

        self.attribute_map = {
            'box': 'box',
            'class_code': 'class_code',
            'class_name': 'class_name',
            'images': 'images'
        }

        self._box = box
        self._class_code = class_code
        self._class_name = class_name
        self._images = images

    @classmethod
    def from_dict(cls, dikt) -> 'BoxObject':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The BoxObject of this BoxObject.
        :rtype: BoxObject
        """
        return deserialize_model(dikt, cls)

    @property
    def box(self) -> BoxArray:
        """
        Gets the box of this BoxObject.

        :return: The box of this BoxObject.
        :rtype: BoxArray
        """
        return self._box

    @box.setter
    def box(self, box: BoxArray):
        """
        Sets the box of this BoxObject.

        :param box: The box of this BoxObject.
        :type box: BoxArray
        """

        self._box = box

    @property
    def class_code(self) -> str:
        """
        Gets the class_code of this BoxObject.

        :return: The class_code of this BoxObject.
        :rtype: str
        """
        return self._class_code

    @class_code.setter
    def class_code(self, class_code: str):
        """
        Sets the class_code of this BoxObject.

        :param class_code: The class_code of this BoxObject.
        :type class_code: str
        """

        self._class_code = class_code

    @property
    def class_name(self) -> str:
        """
        Gets the class_name of this BoxObject.

        :return: The class_name of this BoxObject.
        :rtype: str
        """
        return self._class_name

    @class_name.setter
    def class_name(self, class_name: str):
        """
        Sets the class_name of this BoxObject.

        :param class_name: The class_name of this BoxObject.
        :type class_name: str
        """

        self._class_name = class_name

    @property
    def images(self) -> ProductsArray:
        """
        Gets the images of this BoxObject.

        :return: The images of this BoxObject.
        :rtype: ProductsArray
        """
        return self._images

    @images.setter
    def images(self, images: ProductsArray):
        """
        Sets the images of this BoxObject.

        :param images: The images of this BoxObject.
        :type images: ProductsArray
        """

        self._images = images

