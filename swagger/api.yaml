swagger: '2.0'
info:
  description: This is a API document for Stylens Service
  version: 0.0.2
  title: style-api
  contact:
    email: master@bluehack.net
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: 'api.stylelens.io'
basePath: /
tags:
  - name: feed
    description: feed
  - name: image
    description: image
  - name: playground
    description: playground
schemes:
  - http
paths:
  /feeds:
    get:
      tags:
      - feed
      summary: ""
      description: "Returns Main Feeds"
      operationId: "getFeeds"
      produces:
      - "application/json"
      parameters:
      - name: "offset"
        in: "query"
        description: ""
        required: false
        type: integer
        format: int32
      - name: "limit"
        in: "query"
        description: ""
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GetFeedResponse"
        400:
          description: "Invalid input"
        404:
          description: "Feeds not found"
  /images:
    get:
      tags:
      - image
      summary: "Get Images by imageId"
      description: "Returns similar Images with imageId"
      operationId: "getImages"
      produces:
      - "application/json"
      parameters:
      - name: "imageId"
        in: "query"
        description: ""
        required: true
        type: string
      - name: "offset"
        in: "query"
        description: ""
        required: false
        type: integer
        format: int32
      - name: "limit"
        in: "query"
        description: ""
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GetImagesResponse"
        400:
          description: "Invalid input supplied"
        404:
          description: "imageId or objectId not found"
  /images/{imageId}:
    get:
      tags:
      - image
      summary: "Find Images by ID"
      description: "Returns a single Image"
      operationId: "getImageById"
      produces:
      - "application/json"
      parameters:
      - name: "imageId"
        in: "path"
        description: "ID of Image to return"
        required: true
        type: string
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GetImageResponse"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Image not found"
  /images/userImages:
    post:
      tags:
      - image
      summary: Query to search images
      description: ''
      operationId: getImagesByUserImageFile
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "file"
        in: "formData"
        description: "User's Image file to upload (only support jpg format yet)"
        required: false
        type: "file"
      - name: "offset"
        in: "query"
        description: ""
        required: false
        type: integer
        format: int32
      - name: "limit"
        in: "query"
        description: ""
        required: false
        type: integer
        format: int32
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/GetImagesResponse'
        400:
          description: Invalid input

  /images/userImages/{userImageId}/objects/{objectIndex}:
    get:
      tags:
      - image
      summary: "Get Images by userImageId and objectIndex"
      description: "Returns Images belongs to a userImageId and objectIndex"
      operationId: "getImagesByUserImageIdAndObjectIndex"
      produces:
      - "application/json"
      parameters:
      - name: "userImageId"
        in: "path"
        description: ""
        required: true
        type: string
      - name: "objectIndex"
        in: "path"
        description: ""
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GetImagesResponse"
        400:
          description: "Invalid input supplied"
        404:
          description: "userImageId or objectIndex not found"

  /images/hosts/{hostCode}/images/{productNo}:
    get:
      tags:
      - image
      summary: "Get Image by hostCode and productNo"
      description: "Returns Image belongs to a Host and productNo"
      operationId: "getImageByHostcodeAndProductNo"
      produces:
      - "application/json"
      parameters:
      - name: "hostCode"
        in: "path"
        description: ""
        required: true
        type: string
      - name: "productNo"
        in: "path"
        description: ""
        required: true
        type: string
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GetImageResponse"
        400:
          description: "Invalid input supplied"
        404:
          description: "Host or productNo not found"

  /objects:
    post:
      tags:
      - "object"
      summary: Query to search objects and images
      description: ''
      operationId: getObjectsByUserImageFile
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "file"
        in: "formData"
        description: "User's Image file to upload (only support jpg format yet)"
        required: true
        type: "file"
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/GetObjectsResponse'
        400:
          description: Invalid input

  /objects/images/{imageId}:
    get:
      tags:
      - object
      summary: Query to search multiple objects
      description: ''
      operationId: getObjectsByImageId
      produces:
      - "application/json"
      parameters:
      - name: imageId
        in: "path"
        description: ""
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/GetObjectsByImageIdResponse'
        400:
          description: Invalid input

  /playgrounds/objects:
    post:
      tags:
      - playground
      summary: ''
      description: ''
      operationId: getPlaygroundObjectsByUserImageFile
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "file"
        in: "formData"
        description: "User's Image file to upload (only support jpg format yet)"
        required: true
        type: "file"
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/GetObjectsResponse'
        400:
          description: Invalid input

securityDefinitions:
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:
  Image:
    type: object
    properties:
      id:
        type: string
      product_name:
        type: string
      product_id:
        type: string
      host_code:
        type: string
      host_url:
        type: string
      host_name:
        type: string
      class_code:
        type: string
        example: ""
      price:
        type: integer
        format: int32
      currency_unit:
        type: string
      product_url:
        type: string
      product_no:
        type: string
      nation:
        type: string
      main_image_mobile_full:
        type: string
        description: "Mobile full size of image url"
      main_image_mobile_thumb:
        type: string
        description: "Mobile thumbnail size of image url"
      version:
        type: string
      images:
        type: array
        items:
          $ref: '#/definitions/SimImage'

  SimImage:
    type: object
    properties:
      id:
        type: string
      product_name:
        type: string
      product_id:
        type: string
      host_code:
        type: string
      host_url:
        type: string
      host_name:
        type: string
      class_code:
        type: string
        example: ""
      price:
        type: integer
        format: int32
      currency_unit:
        type: string
      product_url:
        type: string
      product_no:
        type: string
      nation:
        type: string
      main_image_mobile_full:
        type: string
        description: "Mobile full size of image url"
      main_image_mobile_thumb:
        type: string
        description: "Mobile thumbnail size of image url"
      version:
        type: string

  ImagesArray:
    type: array
    items:
      $ref: '#/definitions/Image'

  Box:
    type: object
    properties:
      left:
        type: number
        format: float
      right:
        type: number
        format: float
      top:
        type: number
        format: float
      bottom:
        type: number
        format: float

  BoxesArray:
    type: array
    items:
      $ref: '#/definitions/BoxObject'

  BoxObject:
    type: object
    properties:
      id:
        type: string
      box:
        $ref: '#/definitions/Box'
      image_id:
        type: string
      version_id:
        type: string
      class_code:
        type: string
      score:
        type: number
        format: float
      images:
        type: array
        items:
          $ref: '#/definitions/Image'

  GetImageResponse:
    type: object
    properties:
      message:
        type: string
      data:
        $ref: "#/definitions/Image"

  GetFeedResponse:
    type: object
    properties:
      message:
        type: string
      data:
        type: array
        items:
          $ref: "#/definitions/Image"

  GetObjectsResponse:
    type: object
    properties:
      message:
        type: string
      data:
        type: object
        properties:
          boxes:
            type: array
            items:
              $ref: '#/definitions/BoxObject'
          image_id:
            type: string

  GetObjectsByImageIdResponse:
    type: object
    properties:
      message:
        type: string
      data:
        type: object
        properties:
          boxes:
            type: array
            items:
              $ref: '#/definitions/BoxObject'
          image_id:
            type: string

  SearchImageResponse:
    type: object
    properties:
      message:
        type: string
      data:
        type: array
        items:
          $ref: "#/definitions/Image"

  GetImagesResponse:
    type: object
    properties:
      message:
        type: string
      data:
        type: array
        items:
          $ref: "#/definitions/Image"

externalDocs:
  description: Find out more about BlueLens
  url: 'http://bluelens.io'
